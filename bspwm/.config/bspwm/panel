#! /bin/zsh


if [ "$(pgrep -cx panel)" -gt 1 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

DPI=$(xdpyinfo | awk '/resolution/{print $2}' | sed -e 's/x.*//g')

PANEL_FIFO=/tmp/panel-fifo
PANEL_HEIGHT=$(( 0.2 * $DPI ))
# calculate exact font size
FONT_SIZE=$(( 0.12 * $DPI ))
# round
FONT_SIZE=${FONT_SIZE/.*}
# make it a multiple of 2 (uneven font sizes somehow aren't accepted)
if (( ($FONT_SIZE % 2) != 0 )); then
	(( FONT_SIZE += 1 ))
fi;

PANEL_FONT_FAMILY="-*-terminus-medium-r-normal-*-$FONT_SIZE-*-*-*-c-*-*-1"
export PANEL_FIFO PANEL_HIGHT PANEL_FONT_FAMILY

# handle interrupts
trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

# (re-)create the named pipe
[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

# leave place in the WM for the bar
bspc config top_padding "$PANEL_HEIGHT"

# WM-info (workspaces, mode)
bspc control --subscribe > "$PANEL_FIFO" &

# active window
xtitle -sf 'T%s' > "$PANEL_FIFO" &

# tasks due today
(while :; do echo "D$("$HOME/bin/taskcount" "today")"; sleep 10s; done) > "$PANEL_FIFO" &

# updates
(while :; do echo "A$("$HOME/bin/updatecount")"; sleep 5m; done) > "$PANEL_FIFO" &

# date and time (for example Mon 14-12-30 13:45:10)
(while :; do date '+S%a %y-%m-%d %_H:%M:%S'; sleep 1s; done) > "$PANEL_FIFO" &

# power status
if [[ -e '/sys/class/power_supply/BAT0' ]]; then
	(while :; do echo "P$("$HOME/bin/thinkpad-battery-status")"; sleep 30s; done) > "$PANEL_FIFO" &
fi

# use the colors specified in panel_colors
. "$(dirname "$0")/panel_colors"

# pipe the FIFO through panel_bar to format it and finally into
# the bar to display it
cat "$PANEL_FIFO" | "$(dirname "$0")/panel_bar" | lemonbar -g x$PANEL_HEIGHT -f "$PANEL_FONT_FAMILY" -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" | sh &

# keep the bar up to date, don't exit
wait
