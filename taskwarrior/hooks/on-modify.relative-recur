#!/usr/bin/env python3

# Modified from https://github.com/JensErat/task-relative-recur

import json
import sys
import subprocess
import os
import tempfile
import time

TIME_FORMAT = "%Y%m%dT%H%M%SZ"
UDA_DUE = "relativeRecurDue"
UDA_WAIT = "relativeRecurWait"
UDA_SCHED = "relativeRecurSched"

env = os.environ.copy()
env["TZ"] = "UTC0"

# Hand back duration format parsing to task warrior
def calc(statement):
    calc = subprocess.Popen(
        ["task", "rc.verbose=nothing", "rc.date.iso=yes", "calc", statement],
        stdout=subprocess.PIPE,
        env=env,
    )
    out, err = calc.communicate()
    # Workaround for TW-1254 (https://bug.tasktools.org/browse/TW-1254)
    return out.decode("utf-8").rstrip().replace("-", "").replace(":", "") + "Z"


def _main():
    # Parse the modified task
    original = json.loads(sys.stdin.readline())
    modified = json.loads(sys.stdin.readline())

    repurpose = False
    # Has a task with UDA been marked as completed?
    if (
        (UDA_DUE in original or UDA_WAIT in original or UDA_SCHED in original)
        and original["status"] != "completed"
        and modified["status"] == "completed"
    ):
        del original["modified"]
        if "start" in original:
            del original["start"]
        if UDA_DUE in original:
            original["due"] = calc("today" + "+" + original[UDA_DUE])
        if UDA_WAIT in original:
            original["wait"] = calc("today" + "+" + original[UDA_WAIT])
            original["status"] = "waiting"
        else:
            original["status"] = "pending"
        if UDA_SCHED in original:
            original["scheduled"] = calc("today" + "+" + original[UDA_SCHED])
        original["entry"] = modified["end"]
        repurpose = True

    if repurpose:
        print(json.dumps(original))
        print("Task rescheduled.")
    else:
        print(json.dumps(modified))


if __name__ == "__main__":
    _main()
