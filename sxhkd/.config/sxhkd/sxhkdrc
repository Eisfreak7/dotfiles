#
# bspwm hotkeys
#

super + e ; e
	pkill -x panel; bspc quit

super + shift + r
	~/.config/bspwm/bspwmrc

super + w
	bspc window --close

super + t
	bspc desktop --layout next

super + shift +  b
	bspc desktop --balance

super + b : {plus,minus}
	xbacklight -{inc,dec} 5

super + b : {e,d}
	xbacklight -set {80, 0}

super + {s,f}
	bspc window --toggle {floating,fullscreen}

super + {q,Tab}
	bspc {window,desktop} --focus last

super + p
	bspc window --swap last

super + {o,i}
	bspc control --record-history off; \
	bspc window {older,newer} --focus; \
	bspc control --record-history on

super + y
	bspc window --to-window last.manual

super + shift + m
	bspc window --swap biggest

# be able to focus an empty monitor
# for details on this (and the window moving) see
# http://blog.neeasade.net/2015/04/28/BSPWM-Multihead.html
super + {h,j,k,l}
	bspc config pointer_follows_monitor true; \
	bspc config pointer_follows_focus true; \
	dir={left,down,up,right}; \
	if ! bspc window --focus $dir; then \
		bspc monitor --focus $dir; \
	fi; \
	bspc config pointer_follows_monitor false; \
	bspc config pointer_follows_focus false

# move the window in an i3-like manner
# for example, windows can be moved to an empty monitor and when
# doing so they keep the focus
super + shift + {h,j,k,l}
	bspc config pointer_follows_focus true; \
	cur_win=$(bspc query -W -w) \
	cur_mon=$(bspc query -M -m); \
	dir={left,down,up,right}; \
# move to an empty monitor
	if ! bspc window --focus $dir; then \
		bspc window --to-monitor $dir; \
		bspc monitor --focus $dir; \
	else \
		new_mon=$(bspc query -M -m); \
# if the target is on another (non-empty) monitor
		if [[ "$new_mon" = "$cur_mon" ]]; then \
			bspc window -s $cur_win; \
		else \
			bspc window $cur_win --to-monitor "$new_mon"; \
		fi; \
		bspc window --focus $cur_win; \
    fi; \
    bspc config pointer_follows_focus false

super + shift + ctrl + {h,j,k,l}
	bspc desktop --to-monitor {left,down,up,right} && \
	bspc desktop --focus last; \
	bspc monitor -o $(bspc query -D -m focused | sort | awk 'BEGIN \{found_IX = 0; found_X = 0\} \{if ($1 == "IX") found_IX=1; else if ($1 == "X") found_X=1; else print $1\} END \{if (found_IX == 1) print "IX"; if (found_X == 1) print "X"\}')
# This is a **very** ugly hack to sort roman numbers (up to 10). Don't look at it too long
# or your brain may take damage.

super + {_,shift + }c
	bspc window --focus {next,prev}

super + {comma,period}
	bspc desktop --circulate {backward,forward}

super + bracket{left,right}
	bspc desktop --focus {prev,next}

super + ctrl + {h,j,k,l}
	bspc window --presel {left,down,up,right}

super + ctrl + {_,shift + }space
	bspc {window --presel cancel,desktop --cancel_presel}

super + r : {h,j,k,l}
	bspc window --edge {left -10,down +10,up -10,right +10}

super + r : shift + {h,j,k,l}
	bspc window --edge {right -10,up +10,down -10,left +10}

super + ctrl + {1-9}
	bspc window --ratio 0.{1-9}

super + {_,shift + }{1-9,0}
	bspc {desktop --focus,window --to-desktop} {I,II,III,IV,V,VI,VII,VIII,IX,X}

~button1
	bspc pointer --grab focus

super + button{1-3}
    bspc pointer -g {move,resize_side,resize_corner}

super + !button{1-3}
    bspc pointer -t %i %i

super + @button{1-3}
    bspc pointer -u

super + shift + b : {plus,minus}
	bspc config --desktop focused window_gap $(($(bspc config -d focused window_gap) {+,-} 5))

#
# wm independent hotkeys
#

# power

super + e ; {p, r}
	systemctl {poweroff, reboot}

# this depends on xautolock being running (it should be started in the
# xinitrc)
super + e ; l
	if [[ "$(pgrep -cx xautolock)" -ge 1 ]]; then \
		xautolock -locknow; \
	else \
    	i3lock --dpms --inactivity-timeout 30s --color=333333 \
               --ignore-empty-password --show-failed-attempts; \
    fi;

super + e ; s
	if [[ "$(pgrep -cx xautolock)" -ge 1 ]]; then \
		xautolock -locknow; \
	else \
    	i3lock --dpms --inactivity-timeout 30s --color=333333 \
               --ignore-empty-password --show-failed-attempts; \
    fi; \
	systemctl suspend

# media
super + v : {plus,minus,m}
	amixer set Master {5%+,5%-,toggle}

{XF86AudioRaiseVolume,XF86AudioLowerVolume,XF86AudioMute}
	amixer set Master {5%+,5%-,toggle}

super + m ; {p,h,l}
	mpc {toggle,prev,next}

{XF86AudioPlay,XF86AudioStop,XF86AudioPrev,XF86AudioNext}
	mpc {toggle,stop,prev,next}

# run

super + Return
	termite

super + a
	termite

# Since termite doesn't support displaying images inranger, use urxvt
# borders are needed to avoid Artifacts in images
super + d ; r
	urxvt -e ranger --cmd='set draw_borders true'

super + d ; f
	firefox

# open my current ebook
super + d ; e
	xdg-open "$HOME/Ebooks/current.pdf"

# requires the pass-dmenu script in ~/bin
super + d ; p
	pass-dmenu copy

super + d ; P
	pass-dmenu type

# open something with fasd
super + d ; o
	fasd -f -e "xdg-open" "$(dmenu -noinput)"

# use rofi as a window switcher
super + d ; w
	rofi -show window

super + @i
	scrot -u -e 'mv $f ~/Pictures/'

# needs dmenu2 (for better configuration) and j4-dmenu-desktop-git from the AUR
super + space
	j4-dmenu-desktop --dmenu='dmenu -q -i -h 25 -p Run'

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd; \
	notify-send --urgency=low --app-name='sxhkd' 'configuration reloaded';
