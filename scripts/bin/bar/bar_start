#! /bin/zsh
if [ "$(pgrep -cx panel)" -gt 1 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

dir="$(dirname "$(readlink -f "$0")")"

# use the environment specified in panel_env
. "$dir/bar_env"

# clean up on exit
trap "trap - TERM; rm \"$PANEL_FIFO\"; kill 0" INT TERM QUIT EXIT
trap '' HUP

# (re-)create the named pipe
[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

# leave place in the WM for the bar
bspc config top_padding "$PANEL_HEIGHT"

# WM-info (workspaces, mode)
bspc control --subscribe > "$PANEL_FIFO" &

# active window
xtitle -sf 'T%s' > "$PANEL_FIFO" &

# tasks due today
(while :; do echo "D$("$HOME/bin/taskcount" "today")"; sleep 10s; done) > "$PANEL_FIFO" &

# updates
(while :; do echo "A$("$HOME/bin/updatecount")"; sleep 5m; done) > "$PANEL_FIFO" &

# date and time (for example Mon 14-12-30 13:45:10)
(while :; do date '+S%a %y-%m-%d %_H:%M:%S'; sleep 1s; done) > "$PANEL_FIFO" &

# power status
if [[ -e '/sys/class/power_supply/BAT0' ]]; then
	(while :; do echo "P$("$HOME/bin/thinkpad-battery-status")"; sleep 10s; done) > "$PANEL_FIFO" &
fi

# volume
(while :; do echo "V$("$HOME/bin/volume")"; sleep 1m; done) > "$PANEL_FIFO" &

# cpuload
(while :; do echo "C$("$HOME/bin/cpuload")"; sleep 30s; done) > "$PANEL_FIFO" &

# memory
(while :; do echo "R$("$HOME/bin/memory")"; sleep 30s; done) > "$PANEL_FIFO" &

# root filesystem (also used for /home)
(while :; do echo "F$(df / | awk 'NR==2 {print $5}' | tr -d '%')"; sleep 30s; done) > "$PANEL_FIFO" &

# network
(while :; do echo "N$("$HOME/bin/network")"; sleep 5m; done) > "$PANEL_FIFO" &

# use the colors specified in panel_colors
. "$dir/bar_colors"

# pipe the FIFO through panel_bar to format it and finally into
# the bar to display it
cat "$PANEL_FIFO" \
    | "$dir/bar_format" "$dir" \
    | /usr/bin/lemonbar -p -g x$PANEL_HEIGHT -f "$PANEL_FONT_FAMILY" -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" \
    | sh &

# keep the bar up to date, don't exit
wait
